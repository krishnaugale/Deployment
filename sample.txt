curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash

export NVM_DIR="$HOME/.nvm"

[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

source ~/.bashrc

nvm --version















#!/bin/bash

NETWORK_NAME="rtsp-application-net"

# Check if the network already exists
if [ -z "$(docker network ls --filter name=${NETWORK_NAME} --quiet)" ]; then
  echo "Creating network: ${NETWORK_NAME}"
  docker network create ${NETWORK_NAME}
else
  echo "Network ${NETWORK_NAME} already exists. Skipping network creation."
fi

# Remove and recreate containers
docker rm -f mdb kafka zookeeper keydb rabbitmq

# Zookeeper
docker run -d --name zookeeper --network ${NETWORK_NAME} -p 2181:2181 zookeeper:latest

# Kafka
docker run -d --name kafka --network ${NETWORK_NAME} -p 9092:9092 \
  -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 \
  -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \
  -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 \
  -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 wurstmeister/kafka:latest

# MariaDB
docker run -p 0.0.0.0:3306:3306 --name mdb --network ${NETWORK_NAME} -e MARIADB_ROOT_PASSWORD=password -d mariadb:10.4

# KeyDB
docker run -d --name keydb --network ${NETWORK_NAME} -p 6380:6379 eqalpha/keydb

# RabbitMQ
docker run -d --name rabbitmq --network ${NETWORK_NAME} -p 5672:5672 -p 15672:15672 rabbitmq






















-------------

RTSP_PORT=3000

TSP_ID=159022

TSP_API_VERSION=2.0

TSP_XML_NAMESPACE=ns2

TSP_XML_XMLNS=http://npci.org/upi/schema/

TSP_PROD_TYPE=PSO

TSP_VPA=@bankd

TSP_uWEBSOCKET=FALSE

REDIS_CONFIG=url=redis://127.0.0.1:6380/

MARIADB_PORT=3306

MARIADB_HOST=127.0.0.1

MARIADB_USER=root

MARIADB_PASSWORD=root

MARIADB_DATABASE=rtsp

DTSP_BASE_URL=/pso

PSO_BASE_URL=/pso

APP_BACKEND_BASE_URL=/token/api/tsp

PSO_HOST=127.0.0.1

APP_BACKEND_HOST=127.0.0.1

DTSP_SECURE=TRUE

APP_BACKEND_SECURE=FALSE

PSO_SECURE=FALSE

DTSP_HOST=127.0.0.1

DTSP_PORT=7018

PSO_PORT=9010

APP_BACKEND_PORT=7022
-----------
